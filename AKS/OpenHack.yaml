# apiVersion: v1
# kind: Namespace
# metadata:
#   name: api
# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: web
# ---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: tripviewer
  namespace: web
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    run: tripviewer
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: tripviewer
    role: frontend
  name: tripviewer
  namespace: web
spec:
  nodeSelector:
    "kubernetes.io/os": linux
  containers:
  - env:
    - name: TRIPS_API_ENDPOINT
      value: http://trips.api.svc.cluster.local
    - name: USERPROFILE_API_ENDPOINT
      value: http://userprofile.api.svc.cluster.local
    - name: WCF_ENDPOINT
      value: http://wcf.api.svc.cluster.local
    - name:  ASPNETCORE_ENVIRONMENT 
      value: Development
    image: registrybeg6109.azurecr.io/tripviewer2:1.0
    imagePullPolicy: IfNotPresent
    name: tripsviewer
    resources:
      limits:
        cpu: 500m
        memory: 250Mi
      requests:
        cpu: 100m
        memory: 50Mi
    ports:
      - containerPort: 80
  dnsPolicy: ClusterFirst
  restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: trips
  namespace: api
spec:
  selector:
    app: trips
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: trips 
    role: backend
  name: trips
  namespace: api
spec:
  containers:
  - env:
    - name: OPENAPI_DOCS_URI
      value: http://changeme
    image: registrybeg6109.azurecr.io/trips:v1
    imagePullPolicy: IfNotPresent
    name: trips
    volumeMounts:
      - name: team8-k8s-secrets
        mountPath: "/secrets"
        readOnly: true
    resources:
      limits:
        cpu: 500m
        memory: 250Mi
      requests:
        cpu: 100m
        memory: 50Mi
    ports:
      - containerPort: 80
  volumes:
    - name: team8-k8s-secrets
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "team8-k8s-secrets"
      #secret:
        #secretName: sql-password
  dnsPolicy: ClusterFirst
  restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: userprofile
  namespace: api
spec:
  selector:
    app: userprofile
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: userprofile 
    role: backend
  name: userprofile
  namespace: api
spec:
  containers:
  - env:
    - name: OPENAPI_DOCS_URI
      value: http://changeme
    image: registrybeg6109.azurecr.io/userprofile:v1
    imagePullPolicy: IfNotPresent
    name: userprofile
    volumeMounts:
      - name: team8-k8s-secrets
        mountPath: "/secrets"
        readOnly: true
    resources:
      limits:
        cpu: 500m
        memory: 250Mi
      requests:
        cpu: 100m
        memory: 50Mi
    ports:
      - containerPort: 80
  volumes:
    - name: team8-k8s-secrets
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "team8-k8s-secrets"
      #secret:
       #secretName: sql-password
  dnsPolicy: ClusterFirst
  restartPolicy: Always  
---
apiVersion: v1
kind: Service
metadata:
  name: poi
  namespace: api
spec:
  selector:
    app: poi
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: poi 
    role: backend
  name: poi
  namespace: api
spec:
  containers:
  - env:
    - name: OPENAPI_DOCS_URI
      value: http://changeme
    image: registrybeg6109.azurecr.io/poi:v1
    imagePullPolicy: IfNotPresent
    name: poi
    volumeMounts:
      - name: team8-k8s-secrets
        mountPath: "/secrets"
        readOnly: true
    resources:
      limits:
        cpu: 500m
        memory: 250Mi
      requests:
        cpu: 100m
        memory: 50Mi
    ports:
      - containerPort: 80
  volumes:
    - name: team8-k8s-secrets
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "team8-k8s-secrets"
      #secret:
        #secretName: sql-password
  dnsPolicy: ClusterFirst
  restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: user-java
  namespace: api
spec:
  selector:
    app: user-java
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: user-java 
    role: backend
  name: user-java
  namespace: api
spec:
  containers:
  - env:
    - name: OPENAPI_DOCS_URI
      value: http://changeme
    image: registrybeg6109.azurecr.io/user-java:v1
    imagePullPolicy: IfNotPresent
    name: user-java
    volumeMounts:
      - name: team8-k8s-secrets
        mountPath: "/secrets"
        readOnly: true
    ports:
      - containerPort: 80
  volumes:
    - name: team8-k8s-secrets
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "team8-k8s-secrets"
      #secret:
        #secretName: sql-password
  dnsPolicy: ClusterFirst
  restartPolicy: Always
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   labels:
#     app: wcf 
#   name: wcf
#   namespace: api
# spec:
#   nodeSelector:
#         "kubernetes.io/os": windows
#   containers:
#   - env:
#      - name: OPENAPI_DOCS_URI
#        value: http://changeme
#     image: registrybeg6109.azurecr.io/wcfservice:1.0
#     imagePullPolicy: IfNotPresent
#     name: wcf    
#     resources:
#       limits:
#         cpu: 500m
#         memory: 250Mi
#       requests:
#         cpu: 100m
#         memory: 50Mi
#     ports:
#       - containerPort: 80  
#   dnsPolicy: ClusterFirst
#   restartPolicy: Always
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: wcf
#   namespace: api
# spec:
#   selector:
#     app: wcf
#   ports:
#     - name: http
#       protocol: TCP
#       port: 80
#       targetPort: 80